#ifndef BULLET_H
#define BULLET_H

#include <THEngine.h>
#include "BulletColor.h"
using namespace THEngine;

class BulletType;

class Bullet : public Sprite
{
public:
	enum Type
	{
		NONE = 0,
		LINDAN_RED = 1,
		LINDAN_PURPLE = 2,
		LINDAN_BLUE = 3,
		LINDAN_TEAL = 4,
		LINDAN_GREEN = 5,
		LINDAN_YELLOW = 6,
		LINDAN_ORANGE = 7,
		LINDAN_GREY = 8,
		SMALLJADEROUND_RED = 9,
		SMALLJADEROUND_PURPLE = 10,
		SMALLJADEROUND_BLUE = 11,
		SMALLJADEROUND_TEAL = 12,
		SMALLJADEROUND_GREEN = 13,
		SMALLJADEROUND_YELLOW = 14,
		SMALLJADEROUND_ORANGE = 15,
		SMALLJADEROUND_GREY = 16,
		SMALLJADE_RED = 17,
		SMALLJADE_PURPLE = 18,
		SMALLJADE_BLUE = 19,
		SMALLJADE_TEAL = 20,
		SMALLJADE_GREEN = 21,
		SMALLJADE_YELLOW = 22,
		SMALLJADE_ORANGE = 23,
		SMALLJADE_GREY = 24,
		CHAIN_RED = 25,
		CHAIN_PURPLE = 26,
		CHAIN_BLUE = 27,
		CHAIN_TEAL = 28,
		CHAIN_GREEN = 29,
		CHAIN_YELLOW = 30,
		CHAIN_ORANGE = 31,
		CHAIN_GREY = 32,
		RICE_RED = 33,
		RICE_PURPLE = 34,
		RICE_BLUE = 35,
		RICE_TEAL = 36,
		RICE_GREEN = 37,
		RICE_YELLOW = 38,
		RICE_ORANGE = 39,
		RICE_GREY = 40,
		CHONGDAN_RED = 41,
		CHONGDAN_PURPLE = 42,
		CHONGDAN_BLUE = 43,
		CHONGDAN_TEAL = 44,
		CHONGDAN_GREEN = 45,
		CHONGDAN_YELLOW = 46,
		CHONGDAN_ORANGE = 47,
		CHONGDAN_GREY = 48,
		ZHADAN_RED = 49,
		ZHADAN_PURPLE = 50,
		ZHADAN_BLUE = 51,
		ZHADAN_TEAL = 52,
		ZHADAN_GREEN = 53,
		ZHADAN_YELLOW = 54,
		ZHADAN_ORANGE = 55,
		ZHADAN_GREY = 56,
		BACILLI_RED = 57,
		BACILLI_PURPLE = 58,
		BACILLI_BLUE = 59,
		BACILLI_TEAL = 60,
		BACILLI_GREEN = 61,
		BACILLI_YELLOW = 62,
		BACILLI_ORANGE = 63,
		BACILLI_GREY = 64,
		STARSMALL_RED = 65,
		STARSMALL_PURPLE = 66,
		STARSMALL_BLUE = 67,
		STARSMALL_TEAL = 68,
		STARSMALL_GREEN = 69,
		STARSMALL_YELLOW = 70,
		STARSMALL_ORANGE = 71,
		STARSMALL_GREY = 72,
		POINT_RED = 73,
		POINT_PURPLE = 74,
		POINT_BLUE = 75,
		POINT_TEAL = 76,
		POINT_GREEN = 77,
		POINT_YELLOW = 78,
		POINT_ORANGE = 79,
		POINT_GREY = 80,
		NEEDLE_RED = 81,
		NEEDLE_PURPLE = 82,
		NEEDLE_BLUE = 83,
		NEEDLE_TEAL = 84,
		NEEDLE_GREEN = 85,
		NEEDLE_YELLOW = 86,
		NEEDLE_ORANGE = 87,
		NEEDLE_GREY = 88,
		BACTERIA_RED = 97,
		BACTERIA_PURPLE = 98,
		BACTERIA_BLUE = 99,
		BACTERIA_TEAL = 100,
		BACTERIA_GREEN = 101,
		BACTERIA_YELLOW = 102,
		BACTERIA_GREY = 103,
		STARBIG_RED = 104,
		STARBIG_PURPLE = 105,
		STARBIG_BLUE = 106,
		STARBIG_TEAL = 107,
		STARBIG_GREEN = 108,
		STARBIG_YELLOW = 109,
		STARBIG_ORANGE = 110,
		STARBIG_GREY = 111,
		MIDJADE_RED = 112,
		MIDJADE_PURPLE = 113,
		MIDJADE_BLUE = 114,
		MIDJADE_TEAL = 115,
		MIDJADE_GREEN = 116,
		MIDJADE_YELLOW = 117,
		MIDJADE_ORANGE = 118,
		MIDJADE_GREY = 119,
		BUTTERFLY_RED = 120,
		BUTTERFLY_PURPLE = 121,
		BUTTERFLY_BLUE = 122,
		BUTTERFLY_TEAL = 123,
		BUTTERFLY_GREEN = 124,
		BUTTERFLY_YELLOW = 125,
		BUTTERFLY_ORANGE = 126,
		BUTTERFLY_GREY = 127,
		KNIFE_RED = 128,
		KNIFE_PURPLE = 129,
		KNIFE_BLUE = 130,
		KNIFE_TEAL = 131,
		KNIFE_GREEN = 132,
		KNIFE_YELLOW = 133,
		KNIFE_ORANGE = 134,
		KNIFE_GREY = 135,
		ELLIPSE_RED = 143,
		ELLIPSE_PURPLE = 144,
		ELLIPSE_BLUE = 145,
		ELLIPSE_TEAL = 146,
		ELLIPSE_GREEN = 147,
		ELLIPSE_YELLOW = 148,
		ELLIPSE_ORANGE = 149,
		ELLIPSE_GREY = 150,
		DIDAN_RED = 151,
		DIDAN_PURPLE = 152,
		DIDAN_BLUE = 153,
		DIDAN_TEAL = 154,
		DIDAN_GREEN = 155,
		DIDAN_YELLOW = 156,
		DIDAN_ORANGE = 157,
		DIDAN_GREY = 158,
		HEART_RED = 159,
		HEART_PURPLE = 160,
		HEART_BLUE = 161,
		HEART_TEAL = 162,
		HEART_GREEN = 163,
		HEART_YELLOW = 164,
		HEART_ORANGE = 165,
		HEART_GREY = 166,
		ARROW_RED = 167,
		ARROW_PURPLE = 168,
		ARROW_BLUE = 169,
		ARROW_TEAL = 170,
		ARROW_GREEN = 171,
		ARROW_YELLOW = 172,
		ARROW_ORANGE = 173,
		ARROW_GREY = 174,
		BIGJADE_RED = 175,
		BIGJADE_PURPLE = 176,
		BIGJADE_BLUE = 177,
		BIGJADE_TEAL = 178,
		BIGJADE_GREEN = 179,
		BIGJADE_YELLOW = 180,
		BIGJADE_ORANGE = 181,
		BIGJADE_GREY = 182
	};

protected:
	BulletType* bulletType = nullptr;
	BulletColor bulletColor;
	Type type;

	bool dirSame;                //朝向与运动方向相同
	bool autoDelete = true;             //出屏即消

public:
	Bullet();
	virtual ~Bullet();

	inline void SetBulletColor(BulletColor bulletColor) { this->bulletColor = bulletColor; }
	inline BulletColor GetBulletColor() const { return this->bulletColor; }

	bool Hit(float playerX, float playerY, float playerRadius);

	inline void SetPosition(float x, float y)
	{
		Sprite::SetPosition(Vector3f(x, y, 5.0f));
	}

	inline void SetDirSame(bool dirSame) { this->dirSame = dirSame; }
	inline void SetAutoDelete(bool autoDelete) { this->autoDelete = autoDelete; }

	void SetType(BulletType* type);

	virtual void Update() override;

	void OnDie();
};

#endif